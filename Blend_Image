import ij.*;
import ij.process.*;
import ij.gui.*;
import java.awt.*;
import ij.plugin.*;
import ij.plugin.frame.*;
import java.util.*;

public class Blend_Image implements PlugIn {
 public void run(String arg) {
  ArrayList < ImagePlus > images = new ArrayList < ImagePlus > ();
  int index = 0;
  int numberOfImages = 11;
  while (index < numberOfImages) {
   images.add(IJ.openImage());
   index++;
  }

  ImageProcessor blendP = null;
  ImagePlus blend = images.get(0);
  double[] alphas = {
   .1,
   .2,
   .5,
   .8
  };
  index = 1;
  for (int i = 0; i < alphas.length; i++) {
   double alpha = alphas[i];
   while (index < numberOfImages) {
    ImagePlus imp1 = blend;
    ImagePlus imp2 = images.get(index);
    blendP = blend(imp1, imp2, alpha);
    blend = new ImagePlus("blended", blendP);
    index++;
   }

   blend = new ImagePlus("blended" + alpha, blendP);
   blend.show();
  }
 }

 public static ImageProcessor blend(ImagePlus imp1, ImagePlus imp2, double alpha) {
  int w = imp1.getWidth();
  int h = imp1.getHeight();

  ImageProcessor blendP = new ByteProcessor(w, h);
  blendP.setValue(255);
  blendP.fill();

  for (int i = 0; i < w; i++) {
   for (int j = 0; j < h; j++) {
    int value = (int)(alpha * imp1.getPixel(i, j)[0] + (1 - alpha) * imp2.getPixel(i, j)[0]);
    blendP.putPixel(i, j, value);
   }
  }
  return blendP;
 }
}
